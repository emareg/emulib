# Small LUTs
CRC_tab8 = [ 0x00, 0x1c, 0x38, 0x24, 0x70, 0x6c, 0x48, 0x54, 0xe0, 0xfc, 0xd8, 0xc4, 0x90, 0x8c, 0xa8, 0xb4 ] 

CRC_tab16 = [ 
  0x0000, 0x1081, 0x2102, 0x3183, 0x4204, 0x5285, 0x6306, 0x7387, 
  0x8408, 0x9489, 0xA50A, 0xB58B, 0xC60C, 0xD68D, 0xE70E, 0xF78F
]

CRC_tab32 = [ 
    0x00000000,0x1DB71064,0x3B6E20C8,0x26D930AC,0x76DC4190,0x6B6B51F4,0x4DB26158,0x5005713C,
    0xEDB88320,0xF00F9344,0xD6D6A3E8,0xCB61B38C,0x9B64C2B0,0x86D3D2D4,0xA00AE278,0xBDBDF21C
]

# wrapper for all implementations
def _docrc(crc, data, table):
    for c in data:
        c = int(c)
        crc = (crc >> 4) ^ table[((c ^ crc) & 0x0F)]
        crc = (crc >> 4) ^ table[(((c>>4) ^ crc) & 0x0F)]
    return crc

def crc8(data):
    return _docrc(0xFF, data, CRC_tab8)

def crc16(data):
    return _docrc(0x0000, data, CRC_tab16)
 
def crc32(data):
    return (~_docrc(0xFFFFFFFF, data, CRC_tab32) & 0xFFFFFFFF)
 